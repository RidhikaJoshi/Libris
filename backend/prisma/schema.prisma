// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user{
  id String @id @default(uuid())
  email String @unique
  fullName String 
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model admin{
  id String @id @default(uuid())
  email String @unique
  fullName String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model books{
  id String @id @default(uuid())
  title String
  author String
  description String
  category Category
  totalCopies Int
  available Int
  publication Int
  image String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  FICTIONAL
  NON_FICTIONAL
  BIOGRAPHY
  HISTORY
  SCIENCE
  MATH
  PHILOSOPHY
  OTHER
}

model Transactions{
  id String @id @default(uuid())
  userId String
  bookId String
  bookName String
  bookAuthor String
  Issue_date DateTime
  Return_date DateTime
  Fine Int @default(0)
  status TransactionStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TransactionStatus {
  ISSUED    // Book has been issued online by the user
  TAKEN    // User has physically collected the book from the library
  RETURNED  // Book has been returned to the library
  LOST       // Book has been lost by the user
}


